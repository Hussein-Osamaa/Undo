name: Deploy Admin Dashboard

on:
  push:
    branches: [main, master]
    paths: ['sys/admin-dashboard/**']
  pull_request:
    branches: [main, master]
    paths: ['sys/admin-dashboard/**']
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  ADMIN_DASHBOARD_DIR: sys/admin-dashboard

jobs:
  test:
    name: Test Admin Dashboard
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.ADMIN_DASHBOARD_DIR }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.ADMIN_DASHBOARD_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: https://app.madas.com
          NEXT_PUBLIC_MARKETING_URL: https://madas.com
          NEXT_PUBLIC_ADMIN_URL: https://admin.madas.com

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ${{ env.ADMIN_DASHBOARD_DIR }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.ADMIN_DASHBOARD_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: https://app.madas.com
          NEXT_PUBLIC_MARKETING_URL: https://madas.com
          NEXT_PUBLIC_ADMIN_URL: https://admin.madas.com

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_ADMIN_PROJECT_ID }}
          working-directory: ${{ env.ADMIN_DASHBOARD_DIR }}
          vercel-args: '--prod=false'

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: ${{ env.ADMIN_DASHBOARD_DIR }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.ADMIN_DASHBOARD_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: https://app.madas.com
          NEXT_PUBLIC_MARKETING_URL: https://madas.com
          NEXT_PUBLIC_ADMIN_URL: https://admin.madas.com
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          ADMIN_SECRET_KEY: ${{ secrets.ADMIN_SECRET_KEY }}

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_ADMIN_PROJECT_ID }}
          working-directory: ${{ env.ADMIN_DASHBOARD_DIR }}
          vercel-args: '--prod=true'

      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Admin Dashboard deployed successfully!"
          echo "Production URL: https://admin.madas.com"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Admin Dashboard deployment failed!"
          echo "Please check the logs and try again."
